#include <PrimMomentsModDecl.h> 
 
using namespace Eigen; 
 
void GkSelfPrimMoments2x2vSer_P3(binOpData_t *data, const double *m0, const double *m1, const double *m2, const double *cM, const double *cE, double *u, double *vtSq) 
{ 
  // m0,m1,m2: moments of the distribution function. 
  // cM, cE:   vtSq*cM and vtSq*cE are corrections to u and vtSq, respectively. 
  // u:        velocity. 
  // vtSq:     squared thermal speed, sqrt(T/m). 
 
  // If a corner value is below zero, use cell average m0.
  bool cellAvg = false;
  if (0.5*(4.58257569495584*(m0[11]+m0[10])-2.645751311064591*(m0[9]+m0[8])-3.872983346207417*(m0[7]+m0[6])+2.23606797749979*(m0[5]+m0[4])+3.0*m0[3]-1.732050807568877*(m0[2]+m0[1])+m0[0]) < 0) cellAvg = true; 
  if (-0.5*(4.58257569495584*(m0[11]+m0[10])+2.645751311064591*m0[9]-2.645751311064591*m0[8]-3.872983346207417*m0[7]+3.872983346207417*m0[6]-2.23606797749979*(m0[5]+m0[4])+3.0*m0[3]+1.732050807568877*m0[2]-1.732050807568877*m0[1]-1.0*m0[0]) < 0) cellAvg = true; 
  if (-0.5*(4.58257569495584*(m0[11]+m0[10])-2.645751311064591*m0[9]+2.645751311064591*m0[8]+3.872983346207417*m0[7]-3.872983346207417*m0[6]-2.23606797749979*(m0[5]+m0[4])+3.0*m0[3]-1.732050807568877*m0[2]+1.732050807568877*m0[1]-1.0*m0[0]) < 0) cellAvg = true; 
  if (0.5*(4.58257569495584*(m0[11]+m0[10])+2.645751311064591*(m0[9]+m0[8])+3.872983346207417*(m0[7]+m0[6])+2.23606797749979*(m0[5]+m0[4])+3.0*m0[3]+1.732050807568877*(m0[2]+m0[1])+m0[0]) < 0) cellAvg = true; 
  if (0.5*(4.58257569495584*(m2[11]+m2[10])-2.645751311064591*(m2[9]+m2[8])-3.872983346207417*(m2[7]+m2[6])+2.23606797749979*(m2[5]+m2[4])+3.0*m2[3]-1.732050807568877*(m2[2]+m2[1])+m2[0]) < 0) cellAvg = true; 
  if (-0.5*(4.58257569495584*(m2[11]+m2[10])+2.645751311064591*m2[9]-2.645751311064591*m2[8]-3.872983346207417*m2[7]+3.872983346207417*m2[6]-2.23606797749979*(m2[5]+m2[4])+3.0*m2[3]+1.732050807568877*m2[2]-1.732050807568877*m2[1]-1.0*m2[0]) < 0) cellAvg = true; 
  if (-0.5*(4.58257569495584*(m2[11]+m2[10])-2.645751311064591*m2[9]+2.645751311064591*m2[8]+3.872983346207417*m2[7]-3.872983346207417*m2[6]-2.23606797749979*(m2[5]+m2[4])+3.0*m2[3]-1.732050807568877*m2[2]+1.732050807568877*m2[1]-1.0*m2[0]) < 0) cellAvg = true; 
  if (0.5*(4.58257569495584*(m2[11]+m2[10])+2.645751311064591*(m2[9]+m2[8])+3.872983346207417*(m2[7]+m2[6])+2.23606797749979*(m2[5]+m2[4])+3.0*m2[3]+1.732050807568877*(m2[2]+m2[1])+m2[0]) < 0) cellAvg = true; 
 
  double m0r[12]; 
  double m1r[12]; 
  double cMr[12]; 
  double cEr[12]; 
  double m2r[12]; 
  if (cellAvg) { 
    m0r[0] = m0[0]; 
    m0r[1] = 0.0; 
    m0r[2] = 0.0; 
    m0r[3] = 0.0; 
    m0r[4] = 0.0; 
    m0r[5] = 0.0; 
    m0r[6] = 0.0; 
    m0r[7] = 0.0; 
    m0r[8] = 0.0; 
    m0r[9] = 0.0; 
    m0r[10] = 0.0; 
    m0r[11] = 0.0; 
    m1r[0] = m1[0]; 
    m1r[1] = 0.0; 
    m1r[2] = 0.0; 
    m1r[3] = 0.0; 
    m1r[4] = 0.0; 
    m1r[5] = 0.0; 
    m1r[6] = 0.0; 
    m1r[7] = 0.0; 
    m1r[8] = 0.0; 
    m1r[9] = 0.0; 
    m1r[10] = 0.0; 
    m1r[11] = 0.0; 
    cMr[0] = cM[0]; 
    cMr[1] = 0.0; 
    cMr[2] = 0.0; 
    cMr[3] = 0.0; 
    cMr[4] = 0.0; 
    cMr[5] = 0.0; 
    cMr[6] = 0.0; 
    cMr[7] = 0.0; 
    cMr[8] = 0.0; 
    cMr[9] = 0.0; 
    cMr[10] = 0.0; 
    cMr[11] = 0.0; 
    cEr[0] = cE[0]; 
    cEr[1] = 0.0; 
    cEr[2] = 0.0; 
    cEr[3] = 0.0; 
    cEr[4] = 0.0; 
    cEr[5] = 0.0; 
    cEr[6] = 0.0; 
    cEr[7] = 0.0; 
    cEr[8] = 0.0; 
    cEr[9] = 0.0; 
    cEr[10] = 0.0; 
    cEr[11] = 0.0; 
    m2r[0] = m2[0]; 
    m2r[1] = 0.0; 
    m2r[2] = 0.0; 
    m2r[3] = 0.0; 
    m2r[4] = 0.0; 
    m2r[5] = 0.0; 
    m2r[6] = 0.0; 
    m2r[7] = 0.0; 
    m2r[8] = 0.0; 
    m2r[9] = 0.0; 
    m2r[10] = 0.0; 
    m2r[11] = 0.0; 
  } else { 
    m0r[0] = m0[0]; 
    m0r[1] = m0[1]; 
    m0r[2] = m0[2]; 
    m0r[3] = m0[3]; 
    m0r[4] = m0[4]; 
    m0r[5] = m0[5]; 
    m0r[6] = m0[6]; 
    m0r[7] = m0[7]; 
    m0r[8] = m0[8]; 
    m0r[9] = m0[9]; 
    m0r[10] = m0[10]; 
    m0r[11] = m0[11]; 
    m1r[0] = m1[0]; 
    m1r[1] = m1[1]; 
    m1r[2] = m1[2]; 
    m1r[3] = m1[3]; 
    m1r[4] = m1[4]; 
    m1r[5] = m1[5]; 
    m1r[6] = m1[6]; 
    m1r[7] = m1[7]; 
    m1r[8] = m1[8]; 
    m1r[9] = m1[9]; 
    m1r[10] = m1[10]; 
    m1r[11] = m1[11]; 
    cMr[0] = cM[0]; 
    cMr[1] = cM[1]; 
    cMr[2] = cM[2]; 
    cMr[3] = cM[3]; 
    cMr[4] = cM[4]; 
    cMr[5] = cM[5]; 
    cMr[6] = cM[6]; 
    cMr[7] = cM[7]; 
    cMr[8] = cM[8]; 
    cMr[9] = cM[9]; 
    cMr[10] = cM[10]; 
    cMr[11] = cM[11]; 
    cEr[0] = cE[0]; 
    cEr[1] = cE[1]; 
    cEr[2] = cE[2]; 
    cEr[3] = cE[3]; 
    cEr[4] = cE[4]; 
    cEr[5] = cE[5]; 
    cEr[6] = cE[6]; 
    cEr[7] = cE[7]; 
    cEr[8] = cE[8]; 
    cEr[9] = cE[9]; 
    cEr[10] = cE[10]; 
    cEr[11] = cE[11]; 
    m2r[0] = m2[0]; 
    m2r[1] = m2[1]; 
    m2r[2] = m2[2]; 
    m2r[3] = m2[3]; 
    m2r[4] = m2[4]; 
    m2r[5] = m2[5]; 
    m2r[6] = m2[6]; 
    m2r[7] = m2[7]; 
    m2r[8] = m2[8]; 
    m2r[9] = m2[9]; 
    m2r[10] = m2[10]; 
    m2r[11] = m2[11]; 
  } 
 
  // Declare Eigen matrix and vectors for weak division. 
  data->AEM_S = Eigen::MatrixXd::Zero(24,24); 
 
  // ....... Block from weak multiply of uX and m0  .......... // 
  data->AEM_S(0,0) = 0.5*m0r[0]; 
  data->AEM_S(0,1) = 0.5*m0r[1]; 
  data->AEM_S(0,2) = 0.5*m0r[2]; 
  data->AEM_S(0,3) = 0.5*m0r[3]; 
  data->AEM_S(0,4) = 0.5*m0r[4]; 
  data->AEM_S(0,5) = 0.5*m0r[5]; 
  data->AEM_S(0,6) = 0.5*m0r[6]; 
  data->AEM_S(0,7) = 0.5*m0r[7]; 
  data->AEM_S(0,8) = 0.5*m0r[8]; 
  data->AEM_S(0,9) = 0.5*m0r[9]; 
  data->AEM_S(0,10) = 0.5*m0r[10]; 
  data->AEM_S(0,11) = 0.5*m0r[11]; 
  data->AEM_S(1,0) = 0.5*m0r[1]; 
  data->AEM_S(1,1) = 0.4472135954999579*m0r[4]+0.5*m0r[0]; 
  data->AEM_S(1,2) = 0.5*m0r[3]; 
  data->AEM_S(1,3) = 0.447213595499958*m0r[6]+0.5*m0r[2]; 
  data->AEM_S(1,4) = 0.4391550328268398*m0r[8]+0.4472135954999579*m0r[1]; 
  data->AEM_S(1,5) = 0.5000000000000001*m0r[7]; 
  data->AEM_S(1,6) = 0.4391550328268399*m0r[10]+0.447213595499958*m0r[3]; 
  data->AEM_S(1,7) = 0.5000000000000001*m0r[5]; 
  data->AEM_S(1,8) = 0.4391550328268398*m0r[4]; 
  data->AEM_S(1,9) = 0.5*m0r[11]; 
  data->AEM_S(1,10) = 0.4391550328268399*m0r[6]; 
  data->AEM_S(1,11) = 0.5*m0r[9]; 
  data->AEM_S(2,0) = 0.5*m0r[2]; 
  data->AEM_S(2,1) = 0.5*m0r[3]; 
  data->AEM_S(2,2) = 0.4472135954999579*m0r[5]+0.5*m0r[0]; 
  data->AEM_S(2,3) = 0.447213595499958*m0r[7]+0.5*m0r[1]; 
  data->AEM_S(2,4) = 0.5000000000000001*m0r[6]; 
  data->AEM_S(2,5) = 0.4391550328268398*m0r[9]+0.4472135954999579*m0r[2]; 
  data->AEM_S(2,6) = 0.5000000000000001*m0r[4]; 
  data->AEM_S(2,7) = 0.4391550328268399*m0r[11]+0.447213595499958*m0r[3]; 
  data->AEM_S(2,8) = 0.5*m0r[10]; 
  data->AEM_S(2,9) = 0.4391550328268398*m0r[5]; 
  data->AEM_S(2,10) = 0.5*m0r[8]; 
  data->AEM_S(2,11) = 0.4391550328268399*m0r[7]; 
  data->AEM_S(3,0) = 0.5*m0r[3]; 
  data->AEM_S(3,1) = 0.447213595499958*m0r[6]+0.5*m0r[2]; 
  data->AEM_S(3,2) = 0.447213595499958*m0r[7]+0.5*m0r[1]; 
  data->AEM_S(3,3) = 0.4472135954999579*m0r[5]+0.4472135954999579*m0r[4]+0.5*m0r[0]; 
  data->AEM_S(3,4) = 0.4391550328268399*m0r[10]+0.4472135954999579*m0r[3]; 
  data->AEM_S(3,5) = 0.4391550328268399*m0r[11]+0.4472135954999579*m0r[3]; 
  data->AEM_S(3,6) = 0.4391550328268399*m0r[8]+0.4*m0r[7]+0.447213595499958*m0r[1]; 
  data->AEM_S(3,7) = 0.4391550328268399*m0r[9]+0.4*m0r[6]+0.447213595499958*m0r[2]; 
  data->AEM_S(3,8) = 0.4391550328268399*m0r[6]; 
  data->AEM_S(3,9) = 0.4391550328268399*m0r[7]; 
  data->AEM_S(3,10) = 0.4391550328268399*m0r[4]; 
  data->AEM_S(3,11) = 0.4391550328268399*m0r[5]; 
  data->AEM_S(4,0) = 0.5*m0r[4]; 
  data->AEM_S(4,1) = 0.4391550328268398*m0r[8]+0.4472135954999579*m0r[1]; 
  data->AEM_S(4,2) = 0.5000000000000001*m0r[6]; 
  data->AEM_S(4,3) = 0.4391550328268399*m0r[10]+0.4472135954999579*m0r[3]; 
  data->AEM_S(4,4) = 0.31943828249997*m0r[4]+0.5*m0r[0]; 
  data->AEM_S(4,6) = 0.31943828249997*m0r[6]+0.5000000000000001*m0r[2]; 
  data->AEM_S(4,7) = 0.4472135954999579*m0r[7]; 
  data->AEM_S(4,8) = 0.2981423969999719*m0r[8]+0.4391550328268398*m0r[1]; 
  data->AEM_S(4,10) = 0.2981423969999719*m0r[10]+0.4391550328268399*m0r[3]; 
  data->AEM_S(4,11) = 0.4472135954999579*m0r[11]; 
  data->AEM_S(5,0) = 0.5*m0r[5]; 
  data->AEM_S(5,1) = 0.5000000000000001*m0r[7]; 
  data->AEM_S(5,2) = 0.4391550328268398*m0r[9]+0.4472135954999579*m0r[2]; 
  data->AEM_S(5,3) = 0.4391550328268399*m0r[11]+0.4472135954999579*m0r[3]; 
  data->AEM_S(5,5) = 0.31943828249997*m0r[5]+0.5*m0r[0]; 
  data->AEM_S(5,6) = 0.4472135954999579*m0r[6]; 
  data->AEM_S(5,7) = 0.31943828249997*m0r[7]+0.5000000000000001*m0r[1]; 
  data->AEM_S(5,9) = 0.2981423969999719*m0r[9]+0.4391550328268398*m0r[2]; 
  data->AEM_S(5,10) = 0.4472135954999579*m0r[10]; 
  data->AEM_S(5,11) = 0.2981423969999719*m0r[11]+0.4391550328268399*m0r[3]; 
  data->AEM_S(6,0) = 0.5*m0r[6]; 
  data->AEM_S(6,1) = 0.4391550328268399*m0r[10]+0.447213595499958*m0r[3]; 
  data->AEM_S(6,2) = 0.5000000000000001*m0r[4]; 
  data->AEM_S(6,3) = 0.4391550328268399*m0r[8]+0.4*m0r[7]+0.447213595499958*m0r[1]; 
  data->AEM_S(6,4) = 0.31943828249997*m0r[6]+0.5000000000000001*m0r[2]; 
  data->AEM_S(6,5) = 0.4472135954999579*m0r[6]; 
  data->AEM_S(6,6) = 0.4472135954999579*m0r[5]+0.31943828249997*m0r[4]+0.5*m0r[0]; 
  data->AEM_S(6,7) = 0.3927922024247863*m0r[11]+0.3927922024247863*m0r[10]+0.4*m0r[3]; 
  data->AEM_S(6,8) = 0.2981423969999719*m0r[10]+0.4391550328268399*m0r[3]; 
  data->AEM_S(6,10) = 0.2981423969999719*m0r[8]+0.3927922024247863*m0r[7]+0.4391550328268399*m0r[1]; 
  data->AEM_S(6,11) = 0.3927922024247863*m0r[7]; 
  data->AEM_S(7,0) = 0.5*m0r[7]; 
  data->AEM_S(7,1) = 0.5000000000000001*m0r[5]; 
  data->AEM_S(7,2) = 0.4391550328268399*m0r[11]+0.447213595499958*m0r[3]; 
  data->AEM_S(7,3) = 0.4391550328268399*m0r[9]+0.4*m0r[6]+0.447213595499958*m0r[2]; 
  data->AEM_S(7,4) = 0.4472135954999579*m0r[7]; 
  data->AEM_S(7,5) = 0.31943828249997*m0r[7]+0.5000000000000001*m0r[1]; 
  data->AEM_S(7,6) = 0.3927922024247863*m0r[11]+0.3927922024247863*m0r[10]+0.4*m0r[3]; 
  data->AEM_S(7,7) = 0.31943828249997*m0r[5]+0.4472135954999579*m0r[4]+0.5*m0r[0]; 
  data->AEM_S(7,9) = 0.2981423969999719*m0r[11]+0.4391550328268399*m0r[3]; 
  data->AEM_S(7,10) = 0.3927922024247863*m0r[6]; 
  data->AEM_S(7,11) = 0.2981423969999719*m0r[9]+0.3927922024247863*m0r[6]+0.4391550328268399*m0r[2]; 
  data->AEM_S(8,0) = 0.5*m0r[8]; 
  data->AEM_S(8,1) = 0.4391550328268398*m0r[4]; 
  data->AEM_S(8,2) = 0.5*m0r[10]; 
  data->AEM_S(8,3) = 0.4391550328268399*m0r[6]; 
  data->AEM_S(8,4) = 0.2981423969999719*m0r[8]+0.4391550328268398*m0r[1]; 
  data->AEM_S(8,6) = 0.2981423969999719*m0r[10]+0.4391550328268399*m0r[3]; 
  data->AEM_S(8,8) = 0.2981423969999719*m0r[4]+0.5*m0r[0]; 
  data->AEM_S(8,10) = 0.2981423969999719*m0r[6]+0.5*m0r[2]; 
  data->AEM_S(9,0) = 0.5*m0r[9]; 
  data->AEM_S(9,1) = 0.5*m0r[11]; 
  data->AEM_S(9,2) = 0.4391550328268398*m0r[5]; 
  data->AEM_S(9,3) = 0.4391550328268399*m0r[7]; 
  data->AEM_S(9,5) = 0.2981423969999719*m0r[9]+0.4391550328268398*m0r[2]; 
  data->AEM_S(9,7) = 0.2981423969999719*m0r[11]+0.4391550328268399*m0r[3]; 
  data->AEM_S(9,9) = 0.2981423969999719*m0r[5]+0.5*m0r[0]; 
  data->AEM_S(9,11) = 0.2981423969999719*m0r[7]+0.5*m0r[1]; 
  data->AEM_S(10,0) = 0.5*m0r[10]; 
  data->AEM_S(10,1) = 0.4391550328268399*m0r[6]; 
  data->AEM_S(10,2) = 0.5*m0r[8]; 
  data->AEM_S(10,3) = 0.4391550328268399*m0r[4]; 
  data->AEM_S(10,4) = 0.2981423969999719*m0r[10]+0.4391550328268399*m0r[3]; 
  data->AEM_S(10,5) = 0.4472135954999579*m0r[10]; 
  data->AEM_S(10,6) = 0.2981423969999719*m0r[8]+0.3927922024247863*m0r[7]+0.4391550328268399*m0r[1]; 
  data->AEM_S(10,7) = 0.3927922024247863*m0r[6]; 
  data->AEM_S(10,8) = 0.2981423969999719*m0r[6]+0.5*m0r[2]; 
  data->AEM_S(10,10) = 0.4472135954999579*m0r[5]+0.2981423969999719*m0r[4]+0.5*m0r[0]; 
  data->AEM_S(11,0) = 0.5*m0r[11]; 
  data->AEM_S(11,1) = 0.5*m0r[9]; 
  data->AEM_S(11,2) = 0.4391550328268399*m0r[7]; 
  data->AEM_S(11,3) = 0.4391550328268399*m0r[5]; 
  data->AEM_S(11,4) = 0.4472135954999579*m0r[11]; 
  data->AEM_S(11,5) = 0.2981423969999719*m0r[11]+0.4391550328268399*m0r[3]; 
  data->AEM_S(11,6) = 0.3927922024247863*m0r[7]; 
  data->AEM_S(11,7) = 0.2981423969999719*m0r[9]+0.3927922024247863*m0r[6]+0.4391550328268399*m0r[2]; 
  data->AEM_S(11,9) = 0.2981423969999719*m0r[7]+0.5*m0r[1]; 
  data->AEM_S(11,11) = 0.2981423969999719*m0r[5]+0.4472135954999579*m0r[4]+0.5*m0r[0]; 
 
  // ....... Block from correction to uX .......... // 
  data->AEM_S(0,12) = -0.5*cMr[0]; 
  data->AEM_S(0,13) = -0.5*cMr[1]; 
  data->AEM_S(0,14) = -0.5*cMr[2]; 
  data->AEM_S(0,15) = -0.5*cMr[3]; 
  data->AEM_S(0,16) = -0.5*cMr[4]; 
  data->AEM_S(0,17) = -0.5*cMr[5]; 
  data->AEM_S(0,18) = -0.5*cMr[6]; 
  data->AEM_S(0,19) = -0.5*cMr[7]; 
  data->AEM_S(0,20) = -0.5*cMr[8]; 
  data->AEM_S(0,21) = -0.5*cMr[9]; 
  data->AEM_S(0,22) = -0.5*cMr[10]; 
  data->AEM_S(0,23) = -0.5*cMr[11]; 
  data->AEM_S(1,12) = -0.5*cMr[1]; 
  data->AEM_S(1,13) = (-0.4472135954999579*cMr[4])-0.5*cMr[0]; 
  data->AEM_S(1,14) = -0.5*cMr[3]; 
  data->AEM_S(1,15) = (-0.447213595499958*cMr[6])-0.5*cMr[2]; 
  data->AEM_S(1,16) = (-0.4391550328268398*cMr[8])-0.4472135954999579*cMr[1]; 
  data->AEM_S(1,17) = -0.5000000000000001*cMr[7]; 
  data->AEM_S(1,18) = (-0.4391550328268399*cMr[10])-0.447213595499958*cMr[3]; 
  data->AEM_S(1,19) = -0.5000000000000001*cMr[5]; 
  data->AEM_S(1,20) = -0.4391550328268398*cMr[4]; 
  data->AEM_S(1,21) = -0.5*cMr[11]; 
  data->AEM_S(1,22) = -0.4391550328268399*cMr[6]; 
  data->AEM_S(1,23) = -0.5*cMr[9]; 
  data->AEM_S(2,12) = -0.5*cMr[2]; 
  data->AEM_S(2,13) = -0.5*cMr[3]; 
  data->AEM_S(2,14) = (-0.4472135954999579*cMr[5])-0.5*cMr[0]; 
  data->AEM_S(2,15) = (-0.447213595499958*cMr[7])-0.5*cMr[1]; 
  data->AEM_S(2,16) = -0.5000000000000001*cMr[6]; 
  data->AEM_S(2,17) = (-0.4391550328268398*cMr[9])-0.4472135954999579*cMr[2]; 
  data->AEM_S(2,18) = -0.5000000000000001*cMr[4]; 
  data->AEM_S(2,19) = (-0.4391550328268399*cMr[11])-0.447213595499958*cMr[3]; 
  data->AEM_S(2,20) = -0.5*cMr[10]; 
  data->AEM_S(2,21) = -0.4391550328268398*cMr[5]; 
  data->AEM_S(2,22) = -0.5*cMr[8]; 
  data->AEM_S(2,23) = -0.4391550328268399*cMr[7]; 
  data->AEM_S(3,12) = -0.5*cMr[3]; 
  data->AEM_S(3,13) = (-0.447213595499958*cMr[6])-0.5*cMr[2]; 
  data->AEM_S(3,14) = (-0.447213595499958*cMr[7])-0.5*cMr[1]; 
  data->AEM_S(3,15) = (-0.4472135954999579*cMr[5])-0.4472135954999579*cMr[4]-0.5*cMr[0]; 
  data->AEM_S(3,16) = (-0.4391550328268399*cMr[10])-0.4472135954999579*cMr[3]; 
  data->AEM_S(3,17) = (-0.4391550328268399*cMr[11])-0.4472135954999579*cMr[3]; 
  data->AEM_S(3,18) = (-0.4391550328268399*cMr[8])-0.4*cMr[7]-0.447213595499958*cMr[1]; 
  data->AEM_S(3,19) = (-0.4391550328268399*cMr[9])-0.4*cMr[6]-0.447213595499958*cMr[2]; 
  data->AEM_S(3,20) = -0.4391550328268399*cMr[6]; 
  data->AEM_S(3,21) = -0.4391550328268399*cMr[7]; 
  data->AEM_S(3,22) = -0.4391550328268399*cMr[4]; 
  data->AEM_S(3,23) = -0.4391550328268399*cMr[5]; 
  data->AEM_S(4,12) = -0.5*cMr[4]; 
  data->AEM_S(4,13) = (-0.4391550328268398*cMr[8])-0.4472135954999579*cMr[1]; 
  data->AEM_S(4,14) = -0.5000000000000001*cMr[6]; 
  data->AEM_S(4,15) = (-0.4391550328268399*cMr[10])-0.4472135954999579*cMr[3]; 
  data->AEM_S(4,16) = (-0.31943828249997*cMr[4])-0.5*cMr[0]; 
  data->AEM_S(4,18) = (-0.31943828249997*cMr[6])-0.5000000000000001*cMr[2]; 
  data->AEM_S(4,19) = -0.4472135954999579*cMr[7]; 
  data->AEM_S(4,20) = (-0.2981423969999719*cMr[8])-0.4391550328268398*cMr[1]; 
  data->AEM_S(4,22) = (-0.2981423969999719*cMr[10])-0.4391550328268399*cMr[3]; 
  data->AEM_S(4,23) = -0.4472135954999579*cMr[11]; 
  data->AEM_S(5,12) = -0.5*cMr[5]; 
  data->AEM_S(5,13) = -0.5000000000000001*cMr[7]; 
  data->AEM_S(5,14) = (-0.4391550328268398*cMr[9])-0.4472135954999579*cMr[2]; 
  data->AEM_S(5,15) = (-0.4391550328268399*cMr[11])-0.4472135954999579*cMr[3]; 
  data->AEM_S(5,17) = (-0.31943828249997*cMr[5])-0.5*cMr[0]; 
  data->AEM_S(5,18) = -0.4472135954999579*cMr[6]; 
  data->AEM_S(5,19) = (-0.31943828249997*cMr[7])-0.5000000000000001*cMr[1]; 
  data->AEM_S(5,21) = (-0.2981423969999719*cMr[9])-0.4391550328268398*cMr[2]; 
  data->AEM_S(5,22) = -0.4472135954999579*cMr[10]; 
  data->AEM_S(5,23) = (-0.2981423969999719*cMr[11])-0.4391550328268399*cMr[3]; 
  data->AEM_S(6,12) = -0.5*cMr[6]; 
  data->AEM_S(6,13) = (-0.4391550328268399*cMr[10])-0.447213595499958*cMr[3]; 
  data->AEM_S(6,14) = -0.5000000000000001*cMr[4]; 
  data->AEM_S(6,15) = (-0.4391550328268399*cMr[8])-0.4*cMr[7]-0.447213595499958*cMr[1]; 
  data->AEM_S(6,16) = (-0.31943828249997*cMr[6])-0.5000000000000001*cMr[2]; 
  data->AEM_S(6,17) = -0.4472135954999579*cMr[6]; 
  data->AEM_S(6,18) = (-0.4472135954999579*cMr[5])-0.31943828249997*cMr[4]-0.5*cMr[0]; 
  data->AEM_S(6,19) = (-0.3927922024247863*cMr[11])-0.3927922024247863*cMr[10]-0.4*cMr[3]; 
  data->AEM_S(6,20) = (-0.2981423969999719*cMr[10])-0.4391550328268399*cMr[3]; 
  data->AEM_S(6,22) = (-0.2981423969999719*cMr[8])-0.3927922024247863*cMr[7]-0.4391550328268399*cMr[1]; 
  data->AEM_S(6,23) = -0.3927922024247863*cMr[7]; 
  data->AEM_S(7,12) = -0.5*cMr[7]; 
  data->AEM_S(7,13) = -0.5000000000000001*cMr[5]; 
  data->AEM_S(7,14) = (-0.4391550328268399*cMr[11])-0.447213595499958*cMr[3]; 
  data->AEM_S(7,15) = (-0.4391550328268399*cMr[9])-0.4*cMr[6]-0.447213595499958*cMr[2]; 
  data->AEM_S(7,16) = -0.4472135954999579*cMr[7]; 
  data->AEM_S(7,17) = (-0.31943828249997*cMr[7])-0.5000000000000001*cMr[1]; 
  data->AEM_S(7,18) = (-0.3927922024247863*cMr[11])-0.3927922024247863*cMr[10]-0.4*cMr[3]; 
  data->AEM_S(7,19) = (-0.31943828249997*cMr[5])-0.4472135954999579*cMr[4]-0.5*cMr[0]; 
  data->AEM_S(7,21) = (-0.2981423969999719*cMr[11])-0.4391550328268399*cMr[3]; 
  data->AEM_S(7,22) = -0.3927922024247863*cMr[6]; 
  data->AEM_S(7,23) = (-0.2981423969999719*cMr[9])-0.3927922024247863*cMr[6]-0.4391550328268399*cMr[2]; 
  data->AEM_S(8,12) = -0.5*cMr[8]; 
  data->AEM_S(8,13) = -0.4391550328268398*cMr[4]; 
  data->AEM_S(8,14) = -0.5*cMr[10]; 
  data->AEM_S(8,15) = -0.4391550328268399*cMr[6]; 
  data->AEM_S(8,16) = (-0.2981423969999719*cMr[8])-0.4391550328268398*cMr[1]; 
  data->AEM_S(8,18) = (-0.2981423969999719*cMr[10])-0.4391550328268399*cMr[3]; 
  data->AEM_S(8,20) = (-0.2981423969999719*cMr[4])-0.5*cMr[0]; 
  data->AEM_S(8,22) = (-0.2981423969999719*cMr[6])-0.5*cMr[2]; 
  data->AEM_S(9,12) = -0.5*cMr[9]; 
  data->AEM_S(9,13) = -0.5*cMr[11]; 
  data->AEM_S(9,14) = -0.4391550328268398*cMr[5]; 
  data->AEM_S(9,15) = -0.4391550328268399*cMr[7]; 
  data->AEM_S(9,17) = (-0.2981423969999719*cMr[9])-0.4391550328268398*cMr[2]; 
  data->AEM_S(9,19) = (-0.2981423969999719*cMr[11])-0.4391550328268399*cMr[3]; 
  data->AEM_S(9,21) = (-0.2981423969999719*cMr[5])-0.5*cMr[0]; 
  data->AEM_S(9,23) = (-0.2981423969999719*cMr[7])-0.5*cMr[1]; 
  data->AEM_S(10,12) = -0.5*cMr[10]; 
  data->AEM_S(10,13) = -0.4391550328268399*cMr[6]; 
  data->AEM_S(10,14) = -0.5*cMr[8]; 
  data->AEM_S(10,15) = -0.4391550328268399*cMr[4]; 
  data->AEM_S(10,16) = (-0.2981423969999719*cMr[10])-0.4391550328268399*cMr[3]; 
  data->AEM_S(10,17) = -0.4472135954999579*cMr[10]; 
  data->AEM_S(10,18) = (-0.2981423969999719*cMr[8])-0.3927922024247863*cMr[7]-0.4391550328268399*cMr[1]; 
  data->AEM_S(10,19) = -0.3927922024247863*cMr[6]; 
  data->AEM_S(10,20) = (-0.2981423969999719*cMr[6])-0.5*cMr[2]; 
  data->AEM_S(10,22) = (-0.4472135954999579*cMr[5])-0.2981423969999719*cMr[4]-0.5*cMr[0]; 
  data->AEM_S(11,12) = -0.5*cMr[11]; 
  data->AEM_S(11,13) = -0.5*cMr[9]; 
  data->AEM_S(11,14) = -0.4391550328268399*cMr[7]; 
  data->AEM_S(11,15) = -0.4391550328268399*cMr[5]; 
  data->AEM_S(11,16) = -0.4472135954999579*cMr[11]; 
  data->AEM_S(11,17) = (-0.2981423969999719*cMr[11])-0.4391550328268399*cMr[3]; 
  data->AEM_S(11,18) = -0.3927922024247863*cMr[7]; 
  data->AEM_S(11,19) = (-0.2981423969999719*cMr[9])-0.3927922024247863*cMr[6]-0.4391550328268399*cMr[2]; 
  data->AEM_S(11,21) = (-0.2981423969999719*cMr[7])-0.5*cMr[1]; 
  data->AEM_S(11,23) = (-0.2981423969999719*cMr[5])-0.4472135954999579*cMr[4]-0.5*cMr[0]; 
 
  // ....... Block from weak multiply of uX and m1X  .......... // 
  data->AEM_S(12,0) = 0.5*m1r[0]; 
  data->AEM_S(12,1) = 0.5*m1r[1]; 
  data->AEM_S(12,2) = 0.5*m1r[2]; 
  data->AEM_S(12,3) = 0.5*m1r[3]; 
  data->AEM_S(12,4) = 0.5*m1r[4]; 
  data->AEM_S(12,5) = 0.5*m1r[5]; 
  data->AEM_S(12,6) = 0.5*m1r[6]; 
  data->AEM_S(12,7) = 0.5*m1r[7]; 
  data->AEM_S(12,8) = 0.5*m1r[8]; 
  data->AEM_S(12,9) = 0.5*m1r[9]; 
  data->AEM_S(12,10) = 0.5*m1r[10]; 
  data->AEM_S(12,11) = 0.5*m1r[11]; 
  data->AEM_S(13,0) = 0.5*m1r[1]; 
  data->AEM_S(13,1) = 0.4472135954999579*m1r[4]+0.5*m1r[0]; 
  data->AEM_S(13,2) = 0.5*m1r[3]; 
  data->AEM_S(13,3) = 0.447213595499958*m1r[6]+0.5*m1r[2]; 
  data->AEM_S(13,4) = 0.4391550328268398*m1r[8]+0.4472135954999579*m1r[1]; 
  data->AEM_S(13,5) = 0.5000000000000001*m1r[7]; 
  data->AEM_S(13,6) = 0.4391550328268399*m1r[10]+0.447213595499958*m1r[3]; 
  data->AEM_S(13,7) = 0.5000000000000001*m1r[5]; 
  data->AEM_S(13,8) = 0.4391550328268398*m1r[4]; 
  data->AEM_S(13,9) = 0.5*m1r[11]; 
  data->AEM_S(13,10) = 0.4391550328268399*m1r[6]; 
  data->AEM_S(13,11) = 0.5*m1r[9]; 
  data->AEM_S(14,0) = 0.5*m1r[2]; 
  data->AEM_S(14,1) = 0.5*m1r[3]; 
  data->AEM_S(14,2) = 0.4472135954999579*m1r[5]+0.5*m1r[0]; 
  data->AEM_S(14,3) = 0.447213595499958*m1r[7]+0.5*m1r[1]; 
  data->AEM_S(14,4) = 0.5000000000000001*m1r[6]; 
  data->AEM_S(14,5) = 0.4391550328268398*m1r[9]+0.4472135954999579*m1r[2]; 
  data->AEM_S(14,6) = 0.5000000000000001*m1r[4]; 
  data->AEM_S(14,7) = 0.4391550328268399*m1r[11]+0.447213595499958*m1r[3]; 
  data->AEM_S(14,8) = 0.5*m1r[10]; 
  data->AEM_S(14,9) = 0.4391550328268398*m1r[5]; 
  data->AEM_S(14,10) = 0.5*m1r[8]; 
  data->AEM_S(14,11) = 0.4391550328268399*m1r[7]; 
  data->AEM_S(15,0) = 0.5*m1r[3]; 
  data->AEM_S(15,1) = 0.447213595499958*m1r[6]+0.5*m1r[2]; 
  data->AEM_S(15,2) = 0.447213595499958*m1r[7]+0.5*m1r[1]; 
  data->AEM_S(15,3) = 0.4472135954999579*m1r[5]+0.4472135954999579*m1r[4]+0.5*m1r[0]; 
  data->AEM_S(15,4) = 0.4391550328268399*m1r[10]+0.4472135954999579*m1r[3]; 
  data->AEM_S(15,5) = 0.4391550328268399*m1r[11]+0.4472135954999579*m1r[3]; 
  data->AEM_S(15,6) = 0.4391550328268399*m1r[8]+0.4*m1r[7]+0.447213595499958*m1r[1]; 
  data->AEM_S(15,7) = 0.4391550328268399*m1r[9]+0.4*m1r[6]+0.447213595499958*m1r[2]; 
  data->AEM_S(15,8) = 0.4391550328268399*m1r[6]; 
  data->AEM_S(15,9) = 0.4391550328268399*m1r[7]; 
  data->AEM_S(15,10) = 0.4391550328268399*m1r[4]; 
  data->AEM_S(15,11) = 0.4391550328268399*m1r[5]; 
  data->AEM_S(16,0) = 0.5*m1r[4]; 
  data->AEM_S(16,1) = 0.4391550328268398*m1r[8]+0.4472135954999579*m1r[1]; 
  data->AEM_S(16,2) = 0.5000000000000001*m1r[6]; 
  data->AEM_S(16,3) = 0.4391550328268399*m1r[10]+0.4472135954999579*m1r[3]; 
  data->AEM_S(16,4) = 0.31943828249997*m1r[4]+0.5*m1r[0]; 
  data->AEM_S(16,6) = 0.31943828249997*m1r[6]+0.5000000000000001*m1r[2]; 
  data->AEM_S(16,7) = 0.4472135954999579*m1r[7]; 
  data->AEM_S(16,8) = 0.2981423969999719*m1r[8]+0.4391550328268398*m1r[1]; 
  data->AEM_S(16,10) = 0.2981423969999719*m1r[10]+0.4391550328268399*m1r[3]; 
  data->AEM_S(16,11) = 0.4472135954999579*m1r[11]; 
  data->AEM_S(17,0) = 0.5*m1r[5]; 
  data->AEM_S(17,1) = 0.5000000000000001*m1r[7]; 
  data->AEM_S(17,2) = 0.4391550328268398*m1r[9]+0.4472135954999579*m1r[2]; 
  data->AEM_S(17,3) = 0.4391550328268399*m1r[11]+0.4472135954999579*m1r[3]; 
  data->AEM_S(17,5) = 0.31943828249997*m1r[5]+0.5*m1r[0]; 
  data->AEM_S(17,6) = 0.4472135954999579*m1r[6]; 
  data->AEM_S(17,7) = 0.31943828249997*m1r[7]+0.5000000000000001*m1r[1]; 
  data->AEM_S(17,9) = 0.2981423969999719*m1r[9]+0.4391550328268398*m1r[2]; 
  data->AEM_S(17,10) = 0.4472135954999579*m1r[10]; 
  data->AEM_S(17,11) = 0.2981423969999719*m1r[11]+0.4391550328268399*m1r[3]; 
  data->AEM_S(18,0) = 0.5*m1r[6]; 
  data->AEM_S(18,1) = 0.4391550328268399*m1r[10]+0.447213595499958*m1r[3]; 
  data->AEM_S(18,2) = 0.5000000000000001*m1r[4]; 
  data->AEM_S(18,3) = 0.4391550328268399*m1r[8]+0.4*m1r[7]+0.447213595499958*m1r[1]; 
  data->AEM_S(18,4) = 0.31943828249997*m1r[6]+0.5000000000000001*m1r[2]; 
  data->AEM_S(18,5) = 0.4472135954999579*m1r[6]; 
  data->AEM_S(18,6) = 0.4472135954999579*m1r[5]+0.31943828249997*m1r[4]+0.5*m1r[0]; 
  data->AEM_S(18,7) = 0.3927922024247863*m1r[11]+0.3927922024247863*m1r[10]+0.4*m1r[3]; 
  data->AEM_S(18,8) = 0.2981423969999719*m1r[10]+0.4391550328268399*m1r[3]; 
  data->AEM_S(18,10) = 0.2981423969999719*m1r[8]+0.3927922024247863*m1r[7]+0.4391550328268399*m1r[1]; 
  data->AEM_S(18,11) = 0.3927922024247863*m1r[7]; 
  data->AEM_S(19,0) = 0.5*m1r[7]; 
  data->AEM_S(19,1) = 0.5000000000000001*m1r[5]; 
  data->AEM_S(19,2) = 0.4391550328268399*m1r[11]+0.447213595499958*m1r[3]; 
  data->AEM_S(19,3) = 0.4391550328268399*m1r[9]+0.4*m1r[6]+0.447213595499958*m1r[2]; 
  data->AEM_S(19,4) = 0.4472135954999579*m1r[7]; 
  data->AEM_S(19,5) = 0.31943828249997*m1r[7]+0.5000000000000001*m1r[1]; 
  data->AEM_S(19,6) = 0.3927922024247863*m1r[11]+0.3927922024247863*m1r[10]+0.4*m1r[3]; 
  data->AEM_S(19,7) = 0.31943828249997*m1r[5]+0.4472135954999579*m1r[4]+0.5*m1r[0]; 
  data->AEM_S(19,9) = 0.2981423969999719*m1r[11]+0.4391550328268399*m1r[3]; 
  data->AEM_S(19,10) = 0.3927922024247863*m1r[6]; 
  data->AEM_S(19,11) = 0.2981423969999719*m1r[9]+0.3927922024247863*m1r[6]+0.4391550328268399*m1r[2]; 
  data->AEM_S(20,0) = 0.5*m1r[8]; 
  data->AEM_S(20,1) = 0.4391550328268398*m1r[4]; 
  data->AEM_S(20,2) = 0.5*m1r[10]; 
  data->AEM_S(20,3) = 0.4391550328268399*m1r[6]; 
  data->AEM_S(20,4) = 0.2981423969999719*m1r[8]+0.4391550328268398*m1r[1]; 
  data->AEM_S(20,6) = 0.2981423969999719*m1r[10]+0.4391550328268399*m1r[3]; 
  data->AEM_S(20,8) = 0.2981423969999719*m1r[4]+0.5*m1r[0]; 
  data->AEM_S(20,10) = 0.2981423969999719*m1r[6]+0.5*m1r[2]; 
  data->AEM_S(21,0) = 0.5*m1r[9]; 
  data->AEM_S(21,1) = 0.5*m1r[11]; 
  data->AEM_S(21,2) = 0.4391550328268398*m1r[5]; 
  data->AEM_S(21,3) = 0.4391550328268399*m1r[7]; 
  data->AEM_S(21,5) = 0.2981423969999719*m1r[9]+0.4391550328268398*m1r[2]; 
  data->AEM_S(21,7) = 0.2981423969999719*m1r[11]+0.4391550328268399*m1r[3]; 
  data->AEM_S(21,9) = 0.2981423969999719*m1r[5]+0.5*m1r[0]; 
  data->AEM_S(21,11) = 0.2981423969999719*m1r[7]+0.5*m1r[1]; 
  data->AEM_S(22,0) = 0.5*m1r[10]; 
  data->AEM_S(22,1) = 0.4391550328268399*m1r[6]; 
  data->AEM_S(22,2) = 0.5*m1r[8]; 
  data->AEM_S(22,3) = 0.4391550328268399*m1r[4]; 
  data->AEM_S(22,4) = 0.2981423969999719*m1r[10]+0.4391550328268399*m1r[3]; 
  data->AEM_S(22,5) = 0.4472135954999579*m1r[10]; 
  data->AEM_S(22,6) = 0.2981423969999719*m1r[8]+0.3927922024247863*m1r[7]+0.4391550328268399*m1r[1]; 
  data->AEM_S(22,7) = 0.3927922024247863*m1r[6]; 
  data->AEM_S(22,8) = 0.2981423969999719*m1r[6]+0.5*m1r[2]; 
  data->AEM_S(22,10) = 0.4472135954999579*m1r[5]+0.2981423969999719*m1r[4]+0.5*m1r[0]; 
  data->AEM_S(23,0) = 0.5*m1r[11]; 
  data->AEM_S(23,1) = 0.5*m1r[9]; 
  data->AEM_S(23,2) = 0.4391550328268399*m1r[7]; 
  data->AEM_S(23,3) = 0.4391550328268399*m1r[5]; 
  data->AEM_S(23,4) = 0.4472135954999579*m1r[11]; 
  data->AEM_S(23,5) = 0.2981423969999719*m1r[11]+0.4391550328268399*m1r[3]; 
  data->AEM_S(23,6) = 0.3927922024247863*m1r[7]; 
  data->AEM_S(23,7) = 0.2981423969999719*m1r[9]+0.3927922024247863*m1r[6]+0.4391550328268399*m1r[2]; 
  data->AEM_S(23,9) = 0.2981423969999719*m1r[7]+0.5*m1r[1]; 
  data->AEM_S(23,11) = 0.2981423969999719*m1r[5]+0.4472135954999579*m1r[4]+0.5*m1r[0]; 
 
  // ....... Block from correction to vtSq .......... // 
  data->AEM_S(12,12) = 1.5*m0r[0]-0.5*cEr[0]; 
  data->AEM_S(12,13) = 1.5*m0r[1]-0.5*cEr[1]; 
  data->AEM_S(12,14) = 1.5*m0r[2]-0.5*cEr[2]; 
  data->AEM_S(12,15) = 1.5*m0r[3]-0.5*cEr[3]; 
  data->AEM_S(12,16) = 1.5*m0r[4]-0.5*cEr[4]; 
  data->AEM_S(12,17) = 1.5*m0r[5]-0.5*cEr[5]; 
  data->AEM_S(12,18) = 1.5*m0r[6]-0.5*cEr[6]; 
  data->AEM_S(12,19) = 1.5*m0r[7]-0.5*cEr[7]; 
  data->AEM_S(12,20) = 1.5*m0r[8]-0.5*cEr[8]; 
  data->AEM_S(12,21) = 1.5*m0r[9]-0.5*cEr[9]; 
  data->AEM_S(12,22) = 1.5*m0r[10]-0.5*cEr[10]; 
  data->AEM_S(12,23) = 1.5*m0r[11]-0.5*cEr[11]; 
  data->AEM_S(13,12) = 1.5*m0r[1]-0.5*cEr[1]; 
  data->AEM_S(13,13) = 1.341640786499874*m0r[4]-0.4472135954999579*cEr[4]+1.5*m0r[0]-0.5*cEr[0]; 
  data->AEM_S(13,14) = 1.5*m0r[3]-0.5*cEr[3]; 
  data->AEM_S(13,15) = 1.341640786499874*m0r[6]-0.447213595499958*cEr[6]+1.5*m0r[2]-0.5*cEr[2]; 
  data->AEM_S(13,16) = 1.317465098480519*m0r[8]-0.4391550328268398*cEr[8]+1.341640786499874*m0r[1]-0.4472135954999579*cEr[1]; 
  data->AEM_S(13,17) = 1.5*m0r[7]-0.5000000000000001*cEr[7]; 
  data->AEM_S(13,18) = 1.317465098480519*m0r[10]-0.4391550328268399*cEr[10]+1.341640786499874*m0r[3]-0.447213595499958*cEr[3]; 
  data->AEM_S(13,19) = 1.5*m0r[5]-0.5000000000000001*cEr[5]; 
  data->AEM_S(13,20) = 1.317465098480519*m0r[4]-0.4391550328268398*cEr[4]; 
  data->AEM_S(13,21) = 1.5*m0r[11]-0.5*cEr[11]; 
  data->AEM_S(13,22) = 1.317465098480519*m0r[6]-0.4391550328268399*cEr[6]; 
  data->AEM_S(13,23) = 1.5*m0r[9]-0.5*cEr[9]; 
  data->AEM_S(14,12) = 1.5*m0r[2]-0.5*cEr[2]; 
  data->AEM_S(14,13) = 1.5*m0r[3]-0.5*cEr[3]; 
  data->AEM_S(14,14) = 1.341640786499874*m0r[5]-0.4472135954999579*cEr[5]+1.5*m0r[0]-0.5*cEr[0]; 
  data->AEM_S(14,15) = 1.341640786499874*m0r[7]-0.447213595499958*cEr[7]+1.5*m0r[1]-0.5*cEr[1]; 
  data->AEM_S(14,16) = 1.5*m0r[6]-0.5000000000000001*cEr[6]; 
  data->AEM_S(14,17) = 1.317465098480519*m0r[9]-0.4391550328268398*cEr[9]+1.341640786499874*m0r[2]-0.4472135954999579*cEr[2]; 
  data->AEM_S(14,18) = 1.5*m0r[4]-0.5000000000000001*cEr[4]; 
  data->AEM_S(14,19) = 1.317465098480519*m0r[11]-0.4391550328268399*cEr[11]+1.341640786499874*m0r[3]-0.447213595499958*cEr[3]; 
  data->AEM_S(14,20) = 1.5*m0r[10]-0.5*cEr[10]; 
  data->AEM_S(14,21) = 1.317465098480519*m0r[5]-0.4391550328268398*cEr[5]; 
  data->AEM_S(14,22) = 1.5*m0r[8]-0.5*cEr[8]; 
  data->AEM_S(14,23) = 1.317465098480519*m0r[7]-0.4391550328268399*cEr[7]; 
  data->AEM_S(15,12) = 1.5*m0r[3]-0.5*cEr[3]; 
  data->AEM_S(15,13) = 1.341640786499874*m0r[6]-0.447213595499958*cEr[6]+1.5*m0r[2]-0.5*cEr[2]; 
  data->AEM_S(15,14) = 1.341640786499874*m0r[7]-0.447213595499958*cEr[7]+1.5*m0r[1]-0.5*cEr[1]; 
  data->AEM_S(15,15) = 1.341640786499874*m0r[5]-0.4472135954999579*cEr[5]+1.341640786499874*m0r[4]-0.4472135954999579*cEr[4]+1.5*m0r[0]-0.5*cEr[0]; 
  data->AEM_S(15,16) = 1.31746509848052*m0r[10]-0.4391550328268399*cEr[10]+1.341640786499874*m0r[3]-0.4472135954999579*cEr[3]; 
  data->AEM_S(15,17) = 1.31746509848052*m0r[11]-0.4391550328268399*cEr[11]+1.341640786499874*m0r[3]-0.4472135954999579*cEr[3]; 
  data->AEM_S(15,18) = 1.31746509848052*m0r[8]-0.4391550328268399*cEr[8]+1.2*m0r[7]-0.4*cEr[7]+1.341640786499874*m0r[1]-0.447213595499958*cEr[1]; 
  data->AEM_S(15,19) = 1.31746509848052*m0r[9]-0.4391550328268399*cEr[9]+1.2*m0r[6]-0.4*cEr[6]+1.341640786499874*m0r[2]-0.447213595499958*cEr[2]; 
  data->AEM_S(15,20) = 1.31746509848052*m0r[6]-0.4391550328268399*cEr[6]; 
  data->AEM_S(15,21) = 1.31746509848052*m0r[7]-0.4391550328268399*cEr[7]; 
  data->AEM_S(15,22) = 1.31746509848052*m0r[4]-0.4391550328268399*cEr[4]; 
  data->AEM_S(15,23) = 1.31746509848052*m0r[5]-0.4391550328268399*cEr[5]; 
  data->AEM_S(16,12) = 1.5*m0r[4]-0.5*cEr[4]; 
  data->AEM_S(16,13) = 1.317465098480519*m0r[8]-0.4391550328268398*cEr[8]+1.341640786499874*m0r[1]-0.4472135954999579*cEr[1]; 
  data->AEM_S(16,14) = 1.5*m0r[6]-0.5000000000000001*cEr[6]; 
  data->AEM_S(16,15) = 1.31746509848052*m0r[10]-0.4391550328268399*cEr[10]+1.341640786499874*m0r[3]-0.4472135954999579*cEr[3]; 
  data->AEM_S(16,16) = 0.9583148474999099*m0r[4]-0.31943828249997*cEr[4]+1.5*m0r[0]-0.5*cEr[0]; 
  data->AEM_S(16,18) = 0.9583148474999099*m0r[6]-0.31943828249997*cEr[6]+1.5*m0r[2]-0.5000000000000001*cEr[2]; 
  data->AEM_S(16,19) = 1.341640786499874*m0r[7]-0.4472135954999579*cEr[7]; 
  data->AEM_S(16,20) = 0.8944271909999159*m0r[8]-0.2981423969999719*cEr[8]+1.317465098480519*m0r[1]-0.4391550328268398*cEr[1]; 
  data->AEM_S(16,22) = 0.8944271909999159*m0r[10]-0.2981423969999719*cEr[10]+1.31746509848052*m0r[3]-0.4391550328268399*cEr[3]; 
  data->AEM_S(16,23) = 1.341640786499874*m0r[11]-0.4472135954999579*cEr[11]; 
  data->AEM_S(17,12) = 1.5*m0r[5]-0.5*cEr[5]; 
  data->AEM_S(17,13) = 1.5*m0r[7]-0.5000000000000001*cEr[7]; 
  data->AEM_S(17,14) = 1.317465098480519*m0r[9]-0.4391550328268398*cEr[9]+1.341640786499874*m0r[2]-0.4472135954999579*cEr[2]; 
  data->AEM_S(17,15) = 1.31746509848052*m0r[11]-0.4391550328268399*cEr[11]+1.341640786499874*m0r[3]-0.4472135954999579*cEr[3]; 
  data->AEM_S(17,17) = 0.9583148474999099*m0r[5]-0.31943828249997*cEr[5]+1.5*m0r[0]-0.5*cEr[0]; 
  data->AEM_S(17,18) = 1.341640786499874*m0r[6]-0.4472135954999579*cEr[6]; 
  data->AEM_S(17,19) = 0.9583148474999099*m0r[7]-0.31943828249997*cEr[7]+1.5*m0r[1]-0.5000000000000001*cEr[1]; 
  data->AEM_S(17,21) = 0.8944271909999159*m0r[9]-0.2981423969999719*cEr[9]+1.317465098480519*m0r[2]-0.4391550328268398*cEr[2]; 
  data->AEM_S(17,22) = 1.341640786499874*m0r[10]-0.4472135954999579*cEr[10]; 
  data->AEM_S(17,23) = 0.8944271909999159*m0r[11]-0.2981423969999719*cEr[11]+1.31746509848052*m0r[3]-0.4391550328268399*cEr[3]; 
  data->AEM_S(18,12) = 1.5*m0r[6]-0.5*cEr[6]; 
  data->AEM_S(18,13) = 1.317465098480519*m0r[10]-0.4391550328268399*cEr[10]+1.341640786499874*m0r[3]-0.447213595499958*cEr[3]; 
  data->AEM_S(18,14) = 1.5*m0r[4]-0.5000000000000001*cEr[4]; 
  data->AEM_S(18,15) = 1.31746509848052*m0r[8]-0.4391550328268399*cEr[8]+1.2*m0r[7]-0.4*cEr[7]+1.341640786499874*m0r[1]-0.447213595499958*cEr[1]; 
  data->AEM_S(18,16) = 0.9583148474999099*m0r[6]-0.31943828249997*cEr[6]+1.5*m0r[2]-0.5000000000000001*cEr[2]; 
  data->AEM_S(18,17) = 1.341640786499874*m0r[6]-0.4472135954999579*cEr[6]; 
  data->AEM_S(18,18) = 1.341640786499874*m0r[5]-0.4472135954999579*cEr[5]+0.9583148474999099*m0r[4]-0.31943828249997*cEr[4]+1.5*m0r[0]-0.5*cEr[0]; 
  data->AEM_S(18,19) = 1.178376607274359*m0r[11]-0.3927922024247863*cEr[11]+1.178376607274359*m0r[10]-0.3927922024247863*cEr[10]+1.2*m0r[3]-0.4*cEr[3]; 
  data->AEM_S(18,20) = 0.8944271909999156*m0r[10]-0.2981423969999719*cEr[10]+1.31746509848052*m0r[3]-0.4391550328268399*cEr[3]; 
  data->AEM_S(18,22) = 0.8944271909999156*m0r[8]-0.2981423969999719*cEr[8]+1.178376607274359*m0r[7]-0.3927922024247863*cEr[7]+1.317465098480519*m0r[1]-0.4391550328268399*cEr[1]; 
  data->AEM_S(18,23) = 1.178376607274359*m0r[7]-0.3927922024247863*cEr[7]; 
  data->AEM_S(19,12) = 1.5*m0r[7]-0.5*cEr[7]; 
  data->AEM_S(19,13) = 1.5*m0r[5]-0.5000000000000001*cEr[5]; 
  data->AEM_S(19,14) = 1.317465098480519*m0r[11]-0.4391550328268399*cEr[11]+1.341640786499874*m0r[3]-0.447213595499958*cEr[3]; 
  data->AEM_S(19,15) = 1.31746509848052*m0r[9]-0.4391550328268399*cEr[9]+1.2*m0r[6]-0.4*cEr[6]+1.341640786499874*m0r[2]-0.447213595499958*cEr[2]; 
  data->AEM_S(19,16) = 1.341640786499874*m0r[7]-0.4472135954999579*cEr[7]; 
  data->AEM_S(19,17) = 0.9583148474999099*m0r[7]-0.31943828249997*cEr[7]+1.5*m0r[1]-0.5000000000000001*cEr[1]; 
  data->AEM_S(19,18) = 1.178376607274359*m0r[11]-0.3927922024247863*cEr[11]+1.178376607274359*m0r[10]-0.3927922024247863*cEr[10]+1.2*m0r[3]-0.4*cEr[3]; 
  data->AEM_S(19,19) = 0.9583148474999099*m0r[5]-0.31943828249997*cEr[5]+1.341640786499874*m0r[4]-0.4472135954999579*cEr[4]+1.5*m0r[0]-0.5*cEr[0]; 
  data->AEM_S(19,21) = 0.8944271909999156*m0r[11]-0.2981423969999719*cEr[11]+1.31746509848052*m0r[3]-0.4391550328268399*cEr[3]; 
  data->AEM_S(19,22) = 1.178376607274359*m0r[6]-0.3927922024247863*cEr[6]; 
  data->AEM_S(19,23) = 0.8944271909999156*m0r[9]-0.2981423969999719*cEr[9]+1.178376607274359*m0r[6]-0.3927922024247863*cEr[6]+1.317465098480519*m0r[2]-0.4391550328268399*cEr[2]; 
  data->AEM_S(20,12) = 1.5*m0r[8]-0.5*cEr[8]; 
  data->AEM_S(20,13) = 1.317465098480519*m0r[4]-0.4391550328268398*cEr[4]; 
  data->AEM_S(20,14) = 1.5*m0r[10]-0.5*cEr[10]; 
  data->AEM_S(20,15) = 1.31746509848052*m0r[6]-0.4391550328268399*cEr[6]; 
  data->AEM_S(20,16) = 0.8944271909999159*m0r[8]-0.2981423969999719*cEr[8]+1.317465098480519*m0r[1]-0.4391550328268398*cEr[1]; 
  data->AEM_S(20,18) = 0.8944271909999156*m0r[10]-0.2981423969999719*cEr[10]+1.31746509848052*m0r[3]-0.4391550328268399*cEr[3]; 
  data->AEM_S(20,20) = 0.8944271909999159*m0r[4]-0.2981423969999719*cEr[4]+1.5*m0r[0]-0.5*cEr[0]; 
  data->AEM_S(20,22) = 0.8944271909999156*m0r[6]-0.2981423969999719*cEr[6]+1.5*m0r[2]-0.5*cEr[2]; 
  data->AEM_S(21,12) = 1.5*m0r[9]-0.5*cEr[9]; 
  data->AEM_S(21,13) = 1.5*m0r[11]-0.5*cEr[11]; 
  data->AEM_S(21,14) = 1.317465098480519*m0r[5]-0.4391550328268398*cEr[5]; 
  data->AEM_S(21,15) = 1.31746509848052*m0r[7]-0.4391550328268399*cEr[7]; 
  data->AEM_S(21,17) = 0.8944271909999159*m0r[9]-0.2981423969999719*cEr[9]+1.317465098480519*m0r[2]-0.4391550328268398*cEr[2]; 
  data->AEM_S(21,19) = 0.8944271909999156*m0r[11]-0.2981423969999719*cEr[11]+1.31746509848052*m0r[3]-0.4391550328268399*cEr[3]; 
  data->AEM_S(21,21) = 0.8944271909999159*m0r[5]-0.2981423969999719*cEr[5]+1.5*m0r[0]-0.5*cEr[0]; 
  data->AEM_S(21,23) = 0.8944271909999156*m0r[7]-0.2981423969999719*cEr[7]+1.5*m0r[1]-0.5*cEr[1]; 
  data->AEM_S(22,12) = 1.5*m0r[10]-0.5*cEr[10]; 
  data->AEM_S(22,13) = 1.317465098480519*m0r[6]-0.4391550328268399*cEr[6]; 
  data->AEM_S(22,14) = 1.5*m0r[8]-0.5*cEr[8]; 
  data->AEM_S(22,15) = 1.31746509848052*m0r[4]-0.4391550328268399*cEr[4]; 
  data->AEM_S(22,16) = 0.8944271909999159*m0r[10]-0.2981423969999719*cEr[10]+1.31746509848052*m0r[3]-0.4391550328268399*cEr[3]; 
  data->AEM_S(22,17) = 1.341640786499874*m0r[10]-0.4472135954999579*cEr[10]; 
  data->AEM_S(22,18) = 0.8944271909999156*m0r[8]-0.2981423969999719*cEr[8]+1.178376607274359*m0r[7]-0.3927922024247863*cEr[7]+1.317465098480519*m0r[1]-0.4391550328268399*cEr[1]; 
  data->AEM_S(22,19) = 1.178376607274359*m0r[6]-0.3927922024247863*cEr[6]; 
  data->AEM_S(22,20) = 0.8944271909999156*m0r[6]-0.2981423969999719*cEr[6]+1.5*m0r[2]-0.5*cEr[2]; 
  data->AEM_S(22,22) = 1.341640786499874*m0r[5]-0.4472135954999579*cEr[5]+0.8944271909999159*m0r[4]-0.2981423969999719*cEr[4]+1.5*m0r[0]-0.5*cEr[0]; 
  data->AEM_S(23,12) = 1.5*m0r[11]-0.5*cEr[11]; 
  data->AEM_S(23,13) = 1.5*m0r[9]-0.5*cEr[9]; 
  data->AEM_S(23,14) = 1.317465098480519*m0r[7]-0.4391550328268399*cEr[7]; 
  data->AEM_S(23,15) = 1.31746509848052*m0r[5]-0.4391550328268399*cEr[5]; 
  data->AEM_S(23,16) = 1.341640786499874*m0r[11]-0.4472135954999579*cEr[11]; 
  data->AEM_S(23,17) = 0.8944271909999159*m0r[11]-0.2981423969999719*cEr[11]+1.31746509848052*m0r[3]-0.4391550328268399*cEr[3]; 
  data->AEM_S(23,18) = 1.178376607274359*m0r[7]-0.3927922024247863*cEr[7]; 
  data->AEM_S(23,19) = 0.8944271909999156*m0r[9]-0.2981423969999719*cEr[9]+1.178376607274359*m0r[6]-0.3927922024247863*cEr[6]+1.317465098480519*m0r[2]-0.4391550328268399*cEr[2]; 
  data->AEM_S(23,21) = 0.8944271909999156*m0r[7]-0.2981423969999719*cEr[7]+1.5*m0r[1]-0.5*cEr[1]; 
  data->AEM_S(23,23) = 0.8944271909999159*m0r[5]-0.2981423969999719*cEr[5]+1.341640786499874*m0r[4]-0.4472135954999579*cEr[4]+1.5*m0r[0]-0.5*cEr[0]; 
 
  // ....... RHS vector is composed of m1 and m2 .......... // 
  data->BEV_S << m1r[0],m1r[1],m1r[2],m1r[3],m1r[4],m1r[5],m1r[6],m1r[7],m1r[8],m1r[9],m1r[10],m1r[11],m2r[0],m2r[1],m2r[2],m2r[3],m2r[4],m2r[5],m2r[6],m2r[7],m2r[8],m2r[9],m2r[10],m2r[11]; 
 
  data->u_S = data->AEM_S.colPivHouseholderQr().solve(data->BEV_S); 
 
  Eigen::Map<VectorXd>(u,12,1) = data->u_S.segment<12>(0); 
 
  Eigen::Map<VectorXd>(vtSq,12,1) = data->u_S.segment<12>(12); 
 
} 
 
