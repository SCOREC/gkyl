#include <ProjectFluxOnGhosts.h> 
#include <math.h> 

void ProjectFluxOnGhosts1x1vDir1Ser_P1(const double wv, const double dv, const double zVal, const double *fIn, double *fHat) 
{ 
  // fIn[4]:    input distf. 
  // fHat[4]:   projection of flux on ghost cell. 
 
  fHat[0] = 0.1666666666666667*((10.39230484541326*fIn[1]*wv+3.0*fIn[3]*dv)*zVal+6.0*fIn[0]*wv+1.732050807568877*fIn[2]*dv); 
  fHat[1] = 0.5*zVal*((6.0*fIn[1]*wv+1.732050807568877*fIn[3]*dv)*zVal+3.464101615137754*fIn[0]*wv+fIn[2]*dv); 
  fHat[2] = 0.1666666666666667*((10.39230484541326*fIn[3]*wv+3.0*fIn[1]*dv)*zVal+6.0*fIn[2]*wv+1.732050807568877*fIn[0]*dv); 
  fHat[3] = 0.5*zVal*((6.0*fIn[3]*wv+1.732050807568877*fIn[1]*dv)*zVal+3.464101615137754*fIn[2]*wv+fIn[0]*dv); 
 
}

void ProjectFluxOnGhosts1x2vDir1Ser_P1(const double wv, const double dv, const double zVal, const double *fIn, double *fHat) 
{ 
  // fIn[8]:    input distf. 
  // fHat[8]:   projection of flux on ghost cell. 
 
  fHat[0] = 0.1666666666666667*((10.39230484541326*fIn[1]*wv+3.0*fIn[4]*dv)*zVal+6.0*fIn[0]*wv+1.732050807568877*fIn[2]*dv); 
  fHat[1] = 0.5*zVal*((6.0*fIn[1]*wv+1.732050807568877*fIn[4]*dv)*zVal+3.464101615137754*fIn[0]*wv+fIn[2]*dv); 
  fHat[2] = 0.1666666666666667*((10.39230484541326*fIn[4]*wv+3.0*fIn[1]*dv)*zVal+6.0*fIn[2]*wv+1.732050807568877*fIn[0]*dv); 
  fHat[3] = 0.1666666666666667*((10.39230484541326*fIn[5]*wv+3.0*fIn[7]*dv)*zVal+6.0*fIn[3]*wv+1.732050807568877*fIn[6]*dv); 
  fHat[4] = 0.5*zVal*((6.0*fIn[4]*wv+1.732050807568877*fIn[1]*dv)*zVal+3.464101615137754*fIn[2]*wv+fIn[0]*dv); 
  fHat[5] = 0.5*zVal*((6.0*fIn[5]*wv+1.732050807568877*fIn[7]*dv)*zVal+3.464101615137754*fIn[3]*wv+fIn[6]*dv); 
  fHat[6] = 0.1666666666666667*((10.39230484541326*fIn[7]*wv+3.0*fIn[5]*dv)*zVal+6.0*fIn[6]*wv+1.732050807568877*fIn[3]*dv); 
  fHat[7] = 0.5*zVal*((6.0*fIn[7]*wv+1.732050807568877*fIn[5]*dv)*zVal+3.464101615137754*fIn[6]*wv+fIn[3]*dv); 
 
}

void ProjectFluxOnGhosts1x3vDir1Ser_P1(const double wv, const double dv, const double zVal, const double *fIn, double *fHat) 
{ 
  // fIn[16]:    input distf. 
  // fHat[16]:   projection of flux on ghost cell. 
 
  fHat[0] = 0.1666666666666667*((10.39230484541326*fIn[1]*wv+3.0*fIn[5]*dv)*zVal+6.0*fIn[0]*wv+1.732050807568877*fIn[2]*dv); 
  fHat[1] = 0.5*zVal*((6.0*fIn[1]*wv+1.732050807568877*fIn[5]*dv)*zVal+3.464101615137754*fIn[0]*wv+fIn[2]*dv); 
  fHat[2] = 0.1666666666666667*((10.39230484541326*fIn[5]*wv+3.0*fIn[1]*dv)*zVal+6.0*fIn[2]*wv+1.732050807568877*fIn[0]*dv); 
  fHat[3] = 0.1666666666666667*((10.39230484541326*fIn[6]*wv+3.0*fIn[11]*dv)*zVal+6.0*fIn[3]*wv+1.732050807568877*fIn[7]*dv); 
  fHat[4] = 0.1666666666666667*((10.39230484541326*fIn[8]*wv+3.0*fIn[12]*dv)*zVal+6.0*fIn[4]*wv+1.732050807568877*fIn[9]*dv); 
  fHat[5] = 0.5*zVal*((6.0*fIn[5]*wv+1.732050807568877*fIn[1]*dv)*zVal+3.464101615137754*fIn[2]*wv+fIn[0]*dv); 
  fHat[6] = 0.5*zVal*((6.0*fIn[6]*wv+1.732050807568877*fIn[11]*dv)*zVal+3.464101615137754*fIn[3]*wv+fIn[7]*dv); 
  fHat[7] = 0.1666666666666667*((10.39230484541326*fIn[11]*wv+3.0*fIn[6]*dv)*zVal+6.0*fIn[7]*wv+1.732050807568877*fIn[3]*dv); 
  fHat[8] = 0.5*zVal*((6.0*fIn[8]*wv+1.732050807568877*fIn[12]*dv)*zVal+3.464101615137754*fIn[4]*wv+fIn[9]*dv); 
  fHat[9] = 0.1666666666666667*((10.39230484541326*fIn[12]*wv+3.0*fIn[8]*dv)*zVal+6.0*fIn[9]*wv+1.732050807568877*fIn[4]*dv); 
  fHat[10] = 0.1666666666666667*((10.39230484541326*fIn[13]*wv+3.0*fIn[15]*dv)*zVal+6.0*fIn[10]*wv+1.732050807568877*fIn[14]*dv); 
  fHat[11] = 0.5*zVal*((6.0*fIn[11]*wv+1.732050807568877*fIn[6]*dv)*zVal+3.464101615137754*fIn[7]*wv+fIn[3]*dv); 
  fHat[12] = 0.5*zVal*((6.0*fIn[12]*wv+1.732050807568877*fIn[8]*dv)*zVal+3.464101615137754*fIn[9]*wv+fIn[4]*dv); 
  fHat[13] = 0.5*zVal*((6.0*fIn[13]*wv+1.732050807568877*fIn[15]*dv)*zVal+3.464101615137754*fIn[10]*wv+fIn[14]*dv); 
  fHat[14] = 0.1666666666666667*((10.39230484541326*fIn[15]*wv+3.0*fIn[13]*dv)*zVal+6.0*fIn[14]*wv+1.732050807568877*fIn[10]*dv); 
  fHat[15] = 0.5*zVal*((6.0*fIn[15]*wv+1.732050807568877*fIn[13]*dv)*zVal+3.464101615137754*fIn[14]*wv+fIn[10]*dv); 
 
}

void ProjectFluxOnGhosts3x3vDir3Ser_P1(const double wv, const double dv, const double zVal, const double *fIn, double *fHat) 
{ 
  // fIn[64]:    input distf. 
  // fHat[64]:   projection of flux on ghost cell. 
 
  fHat[0] = 0.1666666666666667*((10.39230484541326*fIn[3]*wv+3.0*fIn[19]*dv)*zVal+6.0*fIn[0]*wv+1.732050807568877*fIn[6]*dv); 
  fHat[1] = 0.1666666666666667*((10.39230484541326*fIn[8]*wv+3.0*fIn[33]*dv)*zVal+6.0*fIn[1]*wv+1.732050807568877*fIn[17]*dv); 
  fHat[2] = 0.1666666666666667*((10.39230484541326*fIn[9]*wv+3.0*fIn[34]*dv)*zVal+6.0*fIn[2]*wv+1.732050807568877*fIn[18]*dv); 
  fHat[3] = 0.5*zVal*((6.0*fIn[3]*wv+1.732050807568877*fIn[19]*dv)*zVal+3.464101615137754*fIn[0]*wv+fIn[6]*dv); 
  fHat[4] = 0.1666666666666667*((10.39230484541326*fIn[12]*wv+3.0*fIn[37]*dv)*zVal+6.0*fIn[4]*wv+1.732050807568877*fIn[20]*dv); 
  fHat[5] = 0.1666666666666667*((10.39230484541326*fIn[15]*wv+3.0*fIn[40]*dv)*zVal+6.0*fIn[5]*wv+1.732050807568877*fIn[21]*dv); 
  fHat[6] = 0.1666666666666667*((10.39230484541326*fIn[19]*wv+3.0*fIn[3]*dv)*zVal+6.0*fIn[6]*wv+1.732050807568877*fIn[0]*dv); 
  fHat[7] = 0.1666666666666667*((10.39230484541326*fIn[22]*wv+3.0*fIn[47]*dv)*zVal+6.0*fIn[7]*wv+1.732050807568877*fIn[32]*dv); 
  fHat[8] = 0.5*zVal*((6.0*fIn[8]*wv+1.732050807568877*fIn[33]*dv)*zVal+3.464101615137754*fIn[1]*wv+fIn[17]*dv); 
  fHat[9] = 0.5*zVal*((6.0*fIn[9]*wv+1.732050807568877*fIn[34]*dv)*zVal+3.464101615137754*fIn[2]*wv+fIn[18]*dv); 
  fHat[10] = 0.1666666666666667*((10.39230484541326*fIn[24]*wv+3.0*fIn[49]*dv)*zVal+6.0*fIn[10]*wv+1.732050807568877*fIn[35]*dv); 
  fHat[11] = 0.1666666666666667*((10.39230484541326*fIn[25]*wv+3.0*fIn[50]*dv)*zVal+6.0*fIn[11]*wv+1.732050807568877*fIn[36]*dv); 
  fHat[12] = 0.5*zVal*((6.0*fIn[12]*wv+1.732050807568877*fIn[37]*dv)*zVal+3.464101615137754*fIn[4]*wv+fIn[20]*dv); 
  fHat[13] = 0.1666666666666667*((10.39230484541326*fIn[27]*wv+3.0*fIn[52]*dv)*zVal+6.0*fIn[13]*wv+1.732050807568877*fIn[38]*dv); 
  fHat[14] = 0.1666666666666667*((10.39230484541326*fIn[28]*wv+3.0*fIn[53]*dv)*zVal+6.0*fIn[14]*wv+1.732050807568877*fIn[39]*dv); 
  fHat[15] = 0.5*zVal*((6.0*fIn[15]*wv+1.732050807568877*fIn[40]*dv)*zVal+3.464101615137754*fIn[5]*wv+fIn[21]*dv); 
  fHat[16] = 0.1666666666666667*((10.39230484541326*fIn[31]*wv+3.0*fIn[56]*dv)*zVal+6.0*fIn[16]*wv+1.732050807568877*fIn[41]*dv); 
  fHat[17] = 0.1666666666666667*((10.39230484541326*fIn[33]*wv+3.0*fIn[8]*dv)*zVal+6.0*fIn[17]*wv+1.732050807568877*fIn[1]*dv); 
  fHat[18] = 0.1666666666666667*((10.39230484541326*fIn[34]*wv+3.0*fIn[9]*dv)*zVal+6.0*fIn[18]*wv+1.732050807568877*fIn[2]*dv); 
  fHat[19] = 0.5*zVal*((6.0*fIn[19]*wv+1.732050807568877*fIn[3]*dv)*zVal+3.464101615137754*fIn[6]*wv+fIn[0]*dv); 
  fHat[20] = 0.1666666666666667*((10.39230484541326*fIn[37]*wv+3.0*fIn[12]*dv)*zVal+6.0*fIn[20]*wv+1.732050807568877*fIn[4]*dv); 
  fHat[21] = 0.1666666666666667*((10.39230484541326*fIn[40]*wv+3.0*fIn[15]*dv)*zVal+6.0*fIn[21]*wv+1.732050807568877*fIn[5]*dv); 
  fHat[22] = 0.5*zVal*((6.0*fIn[22]*wv+1.732050807568877*fIn[47]*dv)*zVal+3.464101615137754*fIn[7]*wv+fIn[32]*dv); 
  fHat[23] = 0.1666666666666667*((10.39230484541326*fIn[42]*wv+3.0*fIn[58]*dv)*zVal+6.0*fIn[23]*wv+1.732050807568877*fIn[48]*dv); 
  fHat[24] = 0.5*zVal*((6.0*fIn[24]*wv+1.732050807568877*fIn[49]*dv)*zVal+3.464101615137754*fIn[10]*wv+fIn[35]*dv); 
  fHat[25] = 0.5*zVal*((6.0*fIn[25]*wv+1.732050807568877*fIn[50]*dv)*zVal+3.464101615137754*fIn[11]*wv+fIn[36]*dv); 
  fHat[26] = 0.1666666666666667*((10.39230484541326*fIn[43]*wv+3.0*fIn[59]*dv)*zVal+6.0*fIn[26]*wv+1.732050807568877*fIn[51]*dv); 
  fHat[27] = 0.5*zVal*((6.0*fIn[27]*wv+1.732050807568877*fIn[52]*dv)*zVal+3.464101615137754*fIn[13]*wv+fIn[38]*dv); 
  fHat[28] = 0.5*zVal*((6.0*fIn[28]*wv+1.732050807568877*fIn[53]*dv)*zVal+3.464101615137754*fIn[14]*wv+fIn[39]*dv); 
  fHat[29] = 0.1666666666666667*((10.39230484541326*fIn[45]*wv+3.0*fIn[61]*dv)*zVal+6.0*fIn[29]*wv+1.732050807568877*fIn[54]*dv); 
  fHat[30] = 0.1666666666666667*((10.39230484541326*fIn[46]*wv+3.0*fIn[62]*dv)*zVal+6.0*fIn[30]*wv+1.732050807568877*fIn[55]*dv); 
  fHat[31] = 0.5*zVal*((6.0*fIn[31]*wv+1.732050807568877*fIn[56]*dv)*zVal+3.464101615137754*fIn[16]*wv+fIn[41]*dv); 
  fHat[32] = 0.1666666666666667*((10.39230484541326*fIn[47]*wv+3.0*fIn[22]*dv)*zVal+6.0*fIn[32]*wv+1.732050807568877*fIn[7]*dv); 
  fHat[33] = 0.5*zVal*((6.0*fIn[33]*wv+1.732050807568877*fIn[8]*dv)*zVal+3.464101615137754*fIn[17]*wv+fIn[1]*dv); 
  fHat[34] = 0.5*zVal*((6.0*fIn[34]*wv+1.732050807568877*fIn[9]*dv)*zVal+3.464101615137754*fIn[18]*wv+fIn[2]*dv); 
  fHat[35] = 0.1666666666666667*((10.39230484541326*fIn[49]*wv+3.0*fIn[24]*dv)*zVal+6.0*fIn[35]*wv+1.732050807568877*fIn[10]*dv); 
  fHat[36] = 0.1666666666666667*((10.39230484541326*fIn[50]*wv+3.0*fIn[25]*dv)*zVal+6.0*fIn[36]*wv+1.732050807568877*fIn[11]*dv); 
  fHat[37] = 0.5*zVal*((6.0*fIn[37]*wv+1.732050807568877*fIn[12]*dv)*zVal+3.464101615137754*fIn[20]*wv+fIn[4]*dv); 
  fHat[38] = 0.1666666666666667*((10.39230484541326*fIn[52]*wv+3.0*fIn[27]*dv)*zVal+6.0*fIn[38]*wv+1.732050807568877*fIn[13]*dv); 
  fHat[39] = 0.1666666666666667*((10.39230484541326*fIn[53]*wv+3.0*fIn[28]*dv)*zVal+6.0*fIn[39]*wv+1.732050807568877*fIn[14]*dv); 
  fHat[40] = 0.5*zVal*((6.0*fIn[40]*wv+1.732050807568877*fIn[15]*dv)*zVal+3.464101615137754*fIn[21]*wv+fIn[5]*dv); 
  fHat[41] = 0.1666666666666667*((10.39230484541326*fIn[56]*wv+3.0*fIn[31]*dv)*zVal+6.0*fIn[41]*wv+1.732050807568877*fIn[16]*dv); 
  fHat[42] = 0.5*zVal*((6.0*fIn[42]*wv+1.732050807568877*fIn[58]*dv)*zVal+3.464101615137754*fIn[23]*wv+fIn[48]*dv); 
  fHat[43] = 0.5*zVal*((6.0*fIn[43]*wv+1.732050807568877*fIn[59]*dv)*zVal+3.464101615137754*fIn[26]*wv+fIn[51]*dv); 
  fHat[44] = 0.1666666666666667*((10.39230484541326*fIn[57]*wv+3.0*fIn[63]*dv)*zVal+6.0*fIn[44]*wv+1.732050807568877*fIn[60]*dv); 
  fHat[45] = 0.5*zVal*((6.0*fIn[45]*wv+1.732050807568877*fIn[61]*dv)*zVal+3.464101615137754*fIn[29]*wv+fIn[54]*dv); 
  fHat[46] = 0.5*zVal*((6.0*fIn[46]*wv+1.732050807568877*fIn[62]*dv)*zVal+3.464101615137754*fIn[30]*wv+fIn[55]*dv); 
  fHat[47] = 0.5*zVal*((6.0*fIn[47]*wv+1.732050807568877*fIn[22]*dv)*zVal+3.464101615137754*fIn[32]*wv+fIn[7]*dv); 
  fHat[48] = 0.1666666666666667*((10.39230484541326*fIn[58]*wv+3.0*fIn[42]*dv)*zVal+6.0*fIn[48]*wv+1.732050807568877*fIn[23]*dv); 
  fHat[49] = 0.5*zVal*((6.0*fIn[49]*wv+1.732050807568877*fIn[24]*dv)*zVal+3.464101615137754*fIn[35]*wv+fIn[10]*dv); 
  fHat[50] = 0.5*zVal*((6.0*fIn[50]*wv+1.732050807568877*fIn[25]*dv)*zVal+3.464101615137754*fIn[36]*wv+fIn[11]*dv); 
  fHat[51] = 0.1666666666666667*((10.39230484541326*fIn[59]*wv+3.0*fIn[43]*dv)*zVal+6.0*fIn[51]*wv+1.732050807568877*fIn[26]*dv); 
  fHat[52] = 0.5*zVal*((6.0*fIn[52]*wv+1.732050807568877*fIn[27]*dv)*zVal+3.464101615137754*fIn[38]*wv+fIn[13]*dv); 
  fHat[53] = 0.5*zVal*((6.0*fIn[53]*wv+1.732050807568877*fIn[28]*dv)*zVal+3.464101615137754*fIn[39]*wv+fIn[14]*dv); 
  fHat[54] = 0.1666666666666667*((10.39230484541326*fIn[61]*wv+3.0*fIn[45]*dv)*zVal+6.0*fIn[54]*wv+1.732050807568877*fIn[29]*dv); 
  fHat[55] = 0.1666666666666667*((10.39230484541326*fIn[62]*wv+3.0*fIn[46]*dv)*zVal+6.0*fIn[55]*wv+1.732050807568877*fIn[30]*dv); 
  fHat[56] = 0.5*zVal*((6.0*fIn[56]*wv+1.732050807568877*fIn[31]*dv)*zVal+3.464101615137754*fIn[41]*wv+fIn[16]*dv); 
  fHat[57] = 0.5*zVal*((6.0*fIn[57]*wv+1.732050807568877*fIn[63]*dv)*zVal+3.464101615137754*fIn[44]*wv+fIn[60]*dv); 
  fHat[58] = 0.5*zVal*((6.0*fIn[58]*wv+1.732050807568877*fIn[42]*dv)*zVal+3.464101615137754*fIn[48]*wv+fIn[23]*dv); 
  fHat[59] = 0.5*zVal*((6.0*fIn[59]*wv+1.732050807568877*fIn[43]*dv)*zVal+3.464101615137754*fIn[51]*wv+fIn[26]*dv); 
  fHat[60] = 0.1666666666666667*((10.39230484541326*fIn[63]*wv+3.0*fIn[57]*dv)*zVal+6.0*fIn[60]*wv+1.732050807568877*fIn[44]*dv); 
  fHat[61] = 0.5*zVal*((6.0*fIn[61]*wv+1.732050807568877*fIn[45]*dv)*zVal+3.464101615137754*fIn[54]*wv+fIn[29]*dv); 
  fHat[62] = 0.5*zVal*((6.0*fIn[62]*wv+1.732050807568877*fIn[46]*dv)*zVal+3.464101615137754*fIn[55]*wv+fIn[30]*dv); 
  fHat[63] = 0.5*zVal*((6.0*fIn[63]*wv+1.732050807568877*fIn[57]*dv)*zVal+3.464101615137754*fIn[60]*wv+fIn[44]*dv); 
 
}
